IF EXISTS(SELECT 1 FROM master.dbo.sysdatabases WHERE name = 'SnackOverflowDB')
BEGIN
  Print '' print  ' *** dropping database SnackOverflowDB'
  DROP DATABASE SnackOverflowDB
End
GO
print '' print '*** creating database SnackOverflowDB'
GO
CREATE DATABASE SnackOverflowDB
GO
print '' print '*** using database SnackOverflowDB'
GO
USE [SnackOverflowDB]
GO
/* Creates the database for the boat system*/
print '' print '*** creating table AGREEMENT'
GO
Create Table [dbo].[AGREEMENT] (
[AGREEMENT_ID][INT]IDENTITY(10000, 1) NOT NULL,
[PRODUCT_ID][INT] NOT NULL,
[SUPPLIER_ID][INT] NOT NULL,
[DATE_SUBMITTED][DATETIME] NOT NULL,
[IS_APPROVED][BIT] NOT NULL,
[APPROVED_BY][INT] NOT NULL,
CONSTRAINT [PK_AGREEMENT] PRIMARY KEY ([AGREEMENT_ID] ASC)
)
GO

CREATE INDEX AGREEMENT_PRODUCT_ID ON  AGREEMENT([PRODUCT_ID])
GO
CREATE INDEX AGREEMENT_SUPPLIER_ID ON  AGREEMENT([SUPPLIER_ID])
GO
ALTER TABLE dbo.AGREEMENT
ADD CONSTRAINT AGREEMENT_DATE_SUBMITTED_def
DEFAULT GETDATE() FOR DATE_SUBMITTED
GO
ALTER TABLE dbo.AGREEMENT
ADD CONSTRAINT AGREEMENT_IS_APPROVED_def
DEFAULT 0 FOR IS_APPROVED
GO
print '' print '*** creating table APP_USER'
GO
Create Table [dbo].[APP_USER] (
[USER_ID][INT]IDENTITY(10000, 1) NOT NULL,
[FIRST_NAME][NVARCHAR](150) NOT NULL,
[LAST_NAME][NVARCHAR](100),
[PHONE][NVARCHAR](15) NOT NULL,
[PREFERRED_ADDRESS_ID][INT],
[E_MAIL_ADDRESS][NVARCHAR](50) NOT NULL,
[E_MAIL_PREFERENCES][BIT] NOT NULL,
[PASSWORD_HASH][NVARCHAR](64) NOT NULL,
[PASSWORD_SALT][NVARCHAR](64) NOT NULL,
[USER_NAME][NVARCHAR](50) NOT NULL,
[ACTIVE][BIT] NOT NULL,
CONSTRAINT [AK_USER_NAME] UNIQUE([USER_NAME] ASC),
CONSTRAINT [AK_E_MAIL_ADDRESS] UNIQUE([E_MAIL_ADDRESS] ASC),
CONSTRAINT [PK_APP_USER] PRIMARY KEY ([USER_ID] ASC)
)
GO

ALTER TABLE dbo.APP_USER
ADD CONSTRAINT APP_USER_E_MAIL_PREFERENCES_def
DEFAULT 0 FOR E_MAIL_PREFERENCES
GO
print '' print '*** creating table BACKORDER_PREORDER'
GO
Create Table [dbo].[BACKORDER_PREORDER] (
[BACKORDER_PREORDER_ID][INT]IDENTITY(10000, 1),
[ORDER_ID][INT] NOT NULL,
[CUSTOMER_ID][INT] NOT NULL,
[AMOUNT][DECIMAL](10,2) NOT NULL,
[DATE_PLACED][DATETIME] NOT NULL,
[DATE_EXPECTED][DATETIME] NOT NULL,
[HAS_ARRIVED][BIT] NOT NULL,
[ADDRESS_1][NVARCHAR](50) NOT NULL,
[ADDRESS_2][NVARCHAR](50) NOT NULL,
[CITY][NVARCHAR](50) NOT NULL,
[STATE][NCHAR](2) NOT NULL,
[ZIP][NVARCHAR](10) NOT NULL,
CONSTRAINT [PK_BACKORDER_PREORDER] PRIMARY KEY ([BACKORDER_PREORDER_ID] ASC)
)
GO

CREATE INDEX BACKORDER_PREORDER_ORDER_ID ON  BACKORDER_PREORDER([ORDER_ID])
GO
CREATE INDEX BACKORDER_PREORDER_CUSTOMER_ID ON  BACKORDER_PREORDER([CUSTOMER_ID])
GO
CREATE INDEX BACKORDER_PREORDER_DATE_PLACED ON  BACKORDER_PREORDER([DATE_PLACED])
GO
CREATE INDEX BACKORDER_PREORDER_DATE_EXPECTED ON  BACKORDER_PREORDER([DATE_EXPECTED])
GO
CREATE INDEX BACKORDER_PREORDER_HAS_ARRIVED ON  BACKORDER_PREORDER([HAS_ARRIVED])
GO
print '' print '*** creating table CATEGORY'
GO
Create Table [dbo].[CATEGORY] (
	[CATEGORY_ID]			[NVARCHAR](200) 				NOT NULL,
	[DESCRIPTION]			[NVARCHAR](750) 				NOT NULL,
	
	CONSTRAINT [PK_CATEGORY_ID] PRIMARY KEY ([CATEGORY_ID] ASC)
)
GO

print '' print '*** creating table CHARITY'
GO
Create Table [dbo].[CHARITY] (
[CHARITY_ID][INT]IDENTITY(10000, 1) NOT NULL,
[USER_ID][INT] NOT NULL,
[EMPLOYEE_ID][INT] NULL,
[CHARITY_NAME][NVARCHAR](200) NOT NULL,
[CONTACT_FIRST_NAME][NVARCHAR](150) NOT NULL,
[CONTACT_LAST_NAME][NVARCHAR](150) NOT NULL,
[PHONE_NUMBER][NVARCHAR](20) NOT NULL,
[EMAIL][NVARCHAR](100) NOT NULL,
[CONTACT_HOURS][NVARCHAR](150) NOT NULL,
[STATUS][NVARCHAR](10) NOT NULL DEFAULT "PENDING",
CONSTRAINT [PK_CHARITY] PRIMARY KEY ([CHARITY_ID] ASC)
)
GO

CREATE INDEX CHARITY_USER_ID ON  CHARITY([USER_ID])
GO
CREATE INDEX CHARITY_EMPLOYEE_ID ON  CHARITY([EMPLOYEE_ID])
GO
print '' print '*** creating table CHARITY_PRODUCTS'
GO
Create Table [dbo].[CHARITY_PRODUCTS] (
[CHARITY_ID][INT] NOT NULL,
[PRODUCT_LOT_ID][INT] NOT NULL,
[QUANTITY][INT] NOT NULL,
CONSTRAINT [PK_CHARITY_PRODUCTS] PRIMARY KEY ([CHARITY_ID] ASC, [PRODUCT_LOT_ID] ASC)
)
GO

print '' print '*** creating table COMMERCIAL'
GO
Create Table [dbo].[COMMERCIAL] (
[COMMERCIAL_ID][INT]IDENTITY(10000, 1) NOT NULL,
[USER_ID][INT] NOT NULL,
[IS_APPROVED][BIT] NOT NULL,
[APPROVED_BY][INT] NOT NULL,
[FEDERAL_TAX_ID][INT] NOT NULL,
[ACTIVE][BIT] NOT NULL,
CONSTRAINT [AK_USER_ID] UNIQUE ([USER_ID] ASC),
CONSTRAINT [PK_COMMERCIAL] PRIMARY KEY ([COMMERCIAL_ID] ASC)
)
GO

print '' print '*** creating table CUSTOMER'
GO
Create Table [dbo].[CUSTOMER] (
[CUSTOMER_ID][INT] NOT NULL,
CONSTRAINT [PK_CUSTOMER] PRIMARY KEY ([CUSTOMER_ID] ASC)
)
GO

print '' print '*** creating table DEAL'
GO
Create Table [dbo].[DEAL] (
[DEAL_ID][INT]IDENTITY(10000, 1) NOT NULL,
[DESCRIPTION][NVARCHAR](200) NOT NULL,
[CODE][NCHAR](10),
[AMOUNT][DECIMAL](5,2),
[PERCENT_OFF][DECIMAL](5,2),
CONSTRAINT [AK_CODE] UNIQUE([CODE] ASC),
CONSTRAINT [PK_DEAL] PRIMARY KEY ([DEAL_ID] ASC)
)
GO

CREATE INDEX DEAL_CODE ON  DEAL([CODE])
GO
print '' print '*** creating table DEAL_CATEGORY'
GO
Create Table [dbo].[DEAL_CATEGORY] (
[DEAL_ID][INT] NOT NULL,
[CATEGORY_ID][NVARCHAR](200) NOT NULL,
[ACTIVE][BIT] NOT NULL,
CONSTRAINT [PK_DEAL_CATEGORY] PRIMARY KEY ([DEAL_ID] ASC, [CATEGORY_ID] ASC)
)
GO

print '' print '*** creating table DEAL_PRODUCT'
GO
Create Table [dbo].[DEAL_PRODUCT] (
[DEAL_ID][INT] NOT NULL,
[PRODUCT_ID][INT] NOT NULL,
[ACTIVE][BIT] NOT NULL,
CONSTRAINT [PK_DEAL_PRODUCT] PRIMARY KEY ([DEAL_ID] ASC, [PRODUCT_ID] ASC)
)
GO

print '' print '*** creating table DELIVERY'
GO
Create Table [dbo].[DELIVERY] (
[DELIVERY_ID][INT]IDENTITY(10000, 1) NOT NULL,
[ROUTE_ID][INT] NOT NULL,
[DEVLIVERY_DATE][DATETIME] NOT NULL,
[VERIFICATION][VARBINARY],
[STATUS_ID][NVARCHAR](50) NOT NULL,
[DELIVERY_TYPE_ID][NVARCHAR](50) NOT NULL,
[ORDER_ID][INT] NOT NULL,
CONSTRAINT [PK_DELIVERY] PRIMARY KEY ([DELIVERY_ID] ASC)
)
GO

CREATE INDEX DELIVERY_ROUTE_ID ON  DELIVERY([ROUTE_ID])
GO
CREATE INDEX DELIVERY_STATUS_ID ON  DELIVERY([STATUS_ID])
GO
CREATE INDEX DELIVERY_DELIVERY_TYPE_ID ON  DELIVERY([DELIVERY_TYPE_ID])
GO
CREATE INDEX DELIVERY_ORDER_ID ON  DELIVERY([ORDER_ID])
GO
print '' print '*** creating table DELIVERY_TYPE'
GO
Create Table [dbo].[DELIVERY_TYPE] (
[DELIVERY_TYPE_ID][NVARCHAR](50) NOT NULL,
[ACTIVE][BIT] NOT NULL,
CONSTRAINT [PK_DELIVERY_TYPE] PRIMARY KEY ([DELIVERY_TYPE_ID] ASC)
)
GO

ALTER TABLE dbo.DELIVERY_TYPE
ADD CONSTRAINT DELIVERY_TYPE_ACTIVE_def
DEFAULT 1 FOR ACTIVE
GO
print '' print '*** creating table DISPATCHER_MESSAGE'
GO
Create Table [dbo].[DISPATCHER_MESSAGE] (
[DISPATCHER_MESSAGE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[EMPLOYEE_ID][INT] NOT NULL,
[MESSAGE_NAME][NVARCHAR](100) NOT NULL,
[DRIVER_ID][INT] NOT NULL,
CONSTRAINT [PK_DISPATCHER_MESSAGE] PRIMARY KEY ([DISPATCHER_MESSAGE_ID] ASC)
)
GO

CREATE INDEX DISPATCHER_MESSAGE_EMPLOYEE_ID ON  DISPATCHER_MESSAGE([EMPLOYEE_ID])
GO
CREATE INDEX DISPATCHER_MESSAGE_DRIVER_ID ON  DISPATCHER_MESSAGE([DRIVER_ID])
GO
print '' print '*** creating table DRIVER'
GO
Create Table [dbo].[DRIVER] (
[DRIVER_ID][INT] NOT NULL,
[DRIVER_LICENSE_NUMBER][NVARCHAR](9) NOT NULL,
[LICENSE_EXPIRATION][DATETIME] NOT NULL,
[ACTIVE][BIT] NOT NULL,
CONSTRAINT [PK_DRIVER] PRIMARY KEY ([DRIVER_ID] ASC)
)
GO

print '' print '*** creating table EMPLOYEE'
GO
Create Table [dbo].[EMPLOYEE] (
[EMPLOYEE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[USER_ID][INT] NOT NULL,
[SALARY][DECIMAL](8,2),
[ACTIVE][BIT] NOT NULL,
[DATE_OF_BIRTH][DATE] NOT NULL,
CONSTRAINT [AK_USER_ID_UNIQUE] UNIQUE([USER_ID] ASC),
CONSTRAINT [PK_EMPLOYEE] PRIMARY KEY ([EMPLOYEE_ID] ASC)
)
GO

CREATE INDEX EMPLOYEE_USER_ID ON  EMPLOYEE([USER_ID])
GO
ALTER TABLE dbo.EMPLOYEE
ADD CONSTRAINT EMPLOYEE_ACTIVE_def
DEFAULT 1 FOR ACTIVE
GO
print '' print '*** creating table EMPLOYEE_MESSAGE'
GO
Create Table [dbo].[EMPLOYEE_MESSAGE] (
[MESSAGE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[SENDER_ID][INT] NOT NULL,
[RECEIVER_ID][INT] NOT NULL,
[SENT][DATETIME] NOT NULL,
[VIEWED][BIT] NOT NULL,
[MESSAGE][NVARCHAR](4000) NOT NULL,
CONSTRAINT [PK_EMPLOYEE_MESSAGE] PRIMARY KEY ([MESSAGE_ID] ASC)
)
GO

CREATE INDEX EMPLOYEE_MESSAGE_SENDER_ID ON  EMPLOYEE_MESSAGE([SENDER_ID])
GO
CREATE INDEX EMPLOYEE_MESSAGE_RECEIVER_ID ON  EMPLOYEE_MESSAGE([RECEIVER_ID])
GO
print '' print '*** creating table EMPLOYEE_ORDER_RESPONSIBILITY'
GO
Create Table [dbo].[EMPLOYEE_ORDER_RESPONSIBILITY] (
[ORDER_ID][INT] NOT NULL,
[EMPLOYEE_ID][INT] NOT NULL,
[DESCRIPTION][NVARCHAR](200) NOT NULL,
CONSTRAINT [PK_EMPLOYEE_ORDER_RESPONSIBILITY] PRIMARY KEY ([ORDER_ID] ASC, [EMPLOYEE_ID] ASC)
)
GO

print '' print '*** creating table EMPLOYEE_ROLE'
GO
Create Table [dbo].[EMPLOYEE_ROLE] (
[EMPLOYEE_ID][INT] NOT NULL,
[ROLE_ID][NVARCHAR](250) NOT NULL,
CONSTRAINT [PK_EMPLOYEE_ROLE] PRIMARY KEY ([EMPLOYEE_ID] ASC, [ROLE_ID] ASC)
)
GO

print '' print '*** creating table GRADE'
GO
Create Table [dbo].[GRADE] (
[GRADE_ID][NVARCHAR](250) NOT NULL,
CONSTRAINT [PK_GRADE] PRIMARY KEY ([GRADE_ID] ASC)
)
GO

print '' print '*** creating table INSPECTION'
GO
Create Table [dbo].[INSPECTION] (
[INSPECTION_ID][INT]IDENTITY(10000, 1) NOT NULL,
[EMPLOYEE_ID][INT] NOT NULL,
[PRODUCT_LOT_ID][INT] NOT NULL,
[GRADE_ID][NVARCHAR](250) NOT NULL,
[DATE_PERFORMED][DATETIME] NOT NULL,
[EXPIRATION_DATE][DATETIME] NOT NULL,
CONSTRAINT [PK_INSPECTION] PRIMARY KEY ([INSPECTION_ID] ASC)
)
GO

CREATE INDEX INSPECTION_GRADE_ID ON  INSPECTION([GRADE_ID])
GO
CREATE INDEX INSPECTION_DATE_PERFORMED ON  INSPECTION([DATE_PERFORMED])
GO
print '' print '*** creating table LOCATION'
GO
Create Table [dbo].[LOCATION] (
[LOCATION_ID][INT]IDENTITY(10000, 1) NOT NULL,
[DESCRIPTION][NVARCHAR](250) NOT NULL,
[IS_ACTIVE][BIT] NOT NULL DEFAULT 1,								
CONSTRAINT [PK_LOCATION] PRIMARY KEY ([LOCATION_ID] ASC)
)
GO

print '' print '*** creating table MAINTENANCE_SCHEDULE'
GO
Create Table [dbo].[MAINTENANCE_SCHEDULE] (
[MAINTENANCE_SCHEDULE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[VEHICLE_ID][INT] NOT NULL,
CONSTRAINT [PK_MAINTENANCE_SCHEDULE] PRIMARY KEY ([MAINTENANCE_SCHEDULE_ID] ASC)
)
GO

print '' print '*** creating table MAINTENANCE_SCHEDULE_LINE'
GO
Create Table [dbo].[MAINTENANCE_SCHEDULE_LINE] (
[MAINTENANCE_SCHEDULE_LINE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[MAINTENANCE_SCHEDULE_ID][INT] NOT NULL,
[DESCRIPTION][NVARCHAR](250) NOT NULL,
[MAINTENANCE_DATE][DATE] NOT NULL,
CONSTRAINT [PK_MAINTENANCE_SCHEDULE_LINE] PRIMARY KEY ([MAINTENANCE_SCHEDULE_LINE_ID] ASC)
)
GO

print '' print '*** creating table MESSAGE_LINE'
GO
Create Table [dbo].[MESSAGE_LINE] (
[MESSAGE_LINE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[DISPATCHER_MESSAGE_ID][INT] NOT NULL,
[MESSAGE_LINE_TEXT][NVARCHAR](250) NOT NULL,
CONSTRAINT [PK_MESSAGE_LINE] PRIMARY KEY ([MESSAGE_LINE_ID] ASC)
)
GO

print '' print '*** creating table ORDER_STATUS'
GO
Create Table [dbo].[ORDER_STATUS] (
[ORDER_STATUS_ID][NVARCHAR](50) NOT NULL,
CONSTRAINT [PK_ORDER_STATUS] PRIMARY KEY ([ORDER_STATUS_ID] ASC)
)
GO

print '' print '*** creating table ORDER_LINE'
GO
Create Table [dbo].[ORDER_LINE] (
[ORDER_LINE_ID][INT] IDENTITY(10000, 1) NOT NULL,
[PRODUCT_ID][int] NOT NULL,
[QUANTITY][int] NOT NULL,
[GRADE_ID][NVARCHAR](250) NOT NULL,
[PRICE][DECIMAL](5,2) NOT NULL,
[UNIT_DISCOUNT][DECIMAL](5,2) NOT NULL,
[TOTAL_DELIVERY_CHARGE][DECIMAL](5,2) NOT NULL,
CONSTRAINT [PK_ORDER_LINE] PRIMARY KEY ([ORDER_LINE_ID] ASC)
)
GO

print '' print '*** creating table ORDER_TYPE'
GO
Create Table [dbo].[ORDER_TYPE] (
[ORDER_TYPE_ID][NVARCHAR](250) NOT NULL,
CONSTRAINT [PK_ORDER_TYPE] PRIMARY KEY ([ORDER_TYPE_ID] ASC)
)
GO


print '' print '*** creating table PACKAGE'
GO
Create Table [dbo].[PACKAGE] (
[PACKAGE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[DELIVERY_ID][INT],
[ORDER_ID][INT] NOT NULL,
CONSTRAINT [PK_PACKAGE] PRIMARY KEY ([PACKAGE_ID] ASC)
)
GO

CREATE INDEX PACKAGE_DELIVERY_ID ON  PACKAGE([DELIVERY_ID])
GO
CREATE INDEX PACKAGE_ORDER_ID ON  PACKAGE([ORDER_ID])
GO
print '' print '*** creating table PACKAGE_LINE'
GO
Create Table [dbo].[PACKAGE_LINE] (
[PACKAGE_LINE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[PACKAGE_ID][INT] NOT NULL,
[PRODUCT_LOT_ID][INT] NOT NULL,
[QUANTITY][INT] NOT NULL,
[PRICE_PAID][DECIMAL](5,2) NOT NULL,
CONSTRAINT [PK_PACKAGE_LINE] PRIMARY KEY ([PACKAGE_LINE_ID] ASC)
)
GO

CREATE INDEX PACKAGE_LINE_PACKAGE_ID ON  PACKAGE_LINE([PACKAGE_ID])
GO
CREATE INDEX PACKAGE_LINE_PRODUCT_LOT_ID ON  PACKAGE_LINE([PRODUCT_LOT_ID])
GO
print '' print '*** creating table PICKUP'
GO
Create Table [dbo].[PICKUP] (
[PICKUP_ID][INT]IDENTITY(10000, 1) NOT NULL,
[SUPPLIER_ID][INT] NOT NULL,
[WAREHOUSE_ID][INT] NOT NULL,
[DRIVER_ID][INT],
[EMPLOYEE_ID][INT],
CONSTRAINT [PK_PICKUP] PRIMARY KEY ([PICKUP_ID] ASC)
)
GO

CREATE INDEX PICKUP_SUPPLIER_ID ON  PICKUP([SUPPLIER_ID])
GO
CREATE INDEX PICKUP_WAREHOUSE_ID ON  PICKUP([WAREHOUSE_ID])
GO
CREATE INDEX PICKUP_DRIVER_ID ON  PICKUP([DRIVER_ID])
GO
CREATE INDEX PICKUP_EMPLOYEE_ID ON  PICKUP([EMPLOYEE_ID])
GO
ALTER TABLE dbo.PICKUP
ADD CONSTRAINT PICKUP_DRIVER_ID_def
DEFAULT NULL FOR DRIVER_ID
GO
ALTER TABLE dbo.PICKUP
ADD CONSTRAINT PICKUP_EMPLOYEE_ID_def
DEFAULT NULL FOR EMPLOYEE_ID
GO
print '' print '*** creating table PICKUP_LINE'
GO
Create Table [dbo].[PICKUP_LINE] (
[PICKUP_LINE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[PICKUP_ID][INT] NOT NULL,
[PRODUCT_LOT_ID][INT] NOT NULL,
[QUANTITY][INT] NOT NULL,
[PICK_UP_STATUS][BIT] NOT NULL,
CONSTRAINT [PK_PICKUP_LINE] PRIMARY KEY ([PICKUP_LINE_ID] ASC)
)
GO

CREATE INDEX PICKUP_LINE_PICKUP_ID ON  PICKUP_LINE([PICKUP_ID])
GO
CREATE INDEX PICKUP_LINE_PRODUCT_LOT_ID ON  PICKUP_LINE([PRODUCT_LOT_ID])
GO
print '' print '*** creating table PRODUCT'
GO
Create Table [dbo].[PRODUCT] (
[PRODUCT_ID][INT]IDENTITY(10000, 1) NOT NULL,
[NAME][NVARCHAR](50) NOT NULL,
[DESCRIPTION][NVARCHAR](200) NOT NULL,
[UNIT_PRICE][DECIMAL](16,2) NOT NULL,
[IMAGE_NAME][VARCHAR](50),
[ACTIVE][BIT] NOT NULL,
[UNIT_OF_MEASUREMENT][NVARCHAR](20) NOT NULL,
[DELIVERY_CHARGE_PER_UNIT][DECIMAL](16,2) NOT NULL,
[IMAGE_BINARY] [IMAGE],
CONSTRAINT [PK_PRODUCT] PRIMARY KEY ([PRODUCT_ID] ASC)
)
GO

CREATE INDEX PRODUCT_UNIT_PRICE ON  PRODUCT([UNIT_PRICE])
GO
CREATE INDEX PRODUCT_DELIVERY_CHARGE_PER_UNIT ON  PRODUCT([DELIVERY_CHARGE_PER_UNIT])
GO
print '' print '*** creating table PRODUCT_CATEGORY'
GO
Create Table [dbo].[PRODUCT_CATEGORY] (
[PRODUCT_ID][INT] NOT NULL,
[CATEGORY_ID][NVARCHAR](200) NOT NULL,
CONSTRAINT [PK_PRODUCT_CATEGORY] PRIMARY KEY ([PRODUCT_ID] ASC, [CATEGORY_ID] ASC)
)
GO

print '' print '*** creating table PRODUCT_GRADE_PRICE'
GO
Create Table [dbo].[PRODUCT_GRADE_PRICE] (
[PRODUCT_ID][INT] NOT NULL,
[GRADE_ID][NVARCHAR](250) NOT NULL,
[PRICE][DECIMAL](5,2) NOT NULL,
CONSTRAINT [PK_PRODUCT_GRADE_PRICE] PRIMARY KEY ([PRODUCT_ID] ASC, [GRADE_ID] ASC)
)
GO

print '' print '*** creating table PRODUCT_LOT'
GO
Create Table [dbo].[PRODUCT_LOT] (
[PRODUCT_LOT_ID][INT]IDENTITY(10000, 1) NOT NULL,
[WAREHOUSE_ID][INT] NOT NULL,
[SUPPLIER_ID][INT] NOT NULL,
[LOCATION_ID][INT] NOT NULL,
[PRODUCT_ID][INT] NOT NULL,
[SUPPLY_MANAGER_ID][INT] NOT NULL,
[QUANTITY][INT] NOT NULL,
[AVAILABLE_QUANTITY][INT] NOT NULL,
[DATE_RECEIVED][DATETIME] NOT NULL,
[EXPIRATION_DATE][DATETIME] NOT NULL,
CONSTRAINT [PK_PRODUCT_LOT] PRIMARY KEY ([PRODUCT_LOT_ID] ASC)
)
GO

CREATE INDEX PRODUCT_LOT_WAREHOUSE_ID ON  PRODUCT_LOT([WAREHOUSE_ID])
GO
CREATE INDEX PRODUCT_LOT_SUPPLIER_ID ON  PRODUCT_LOT([SUPPLIER_ID])
GO
CREATE INDEX PRODUCT_LOT_LOCATION_ID ON  PRODUCT_LOT([LOCATION_ID])
GO
CREATE INDEX PRODUCT_LOT_PRODUCT_ID ON  PRODUCT_LOT([PRODUCT_ID])
GO
CREATE INDEX PRODUCT_LOT_SUPPLY_MANAGER_ID ON  PRODUCT_LOT([SUPPLY_MANAGER_ID])
GO
CREATE INDEX PRODUCT_LOT_DATE_RECEIVED ON  PRODUCT_LOT([DATE_RECEIVED])
GO
ALTER TABLE dbo.PRODUCT_LOT
ADD CONSTRAINT PRODUCT_LOT_DATE_RECEIVED_def
DEFAULT GETDATE() FOR DATE_RECEIVED
GO

print '' print '*** creating table PRODUCT_ORDER'
GO
Create Table [dbo].[PRODUCT_ORDER] (
[ORDER_ID][INT]IDENTITY(10000, 1) NOT NULL,
[CUSTOMER_ID][INT] NOT NULL,
[ORDER_TYPE_ID][NVARCHAR](250) NOT NULL,
[ADDRESS_TYPE][NVARCHAR](50) NOT NULL,
[DELIVERY_TYPE_ID][NVARCHAR](50) NOT NULL,
[AMOUNT][DECIMAL](6,2) NOT NULL,
[ORDER_DATE][DATETIME] NOT NULL,
[DATE_EXPECTED][DATETIME] NOT NULL,
[DISCOUNT][DECIMAL](5,2) NOT NULL,
[ORDER_STATUS_ID][NVARCHAR](50) NOT NULL,
[USER_ADDRESS_ID][INT] NOT NULL,
[HAS_ARRIVED][BIT] NOT NULL,
CONSTRAINT [PK_PRODUCT_ORDER] PRIMARY KEY ([ORDER_ID] ASC)
)
GO

CREATE INDEX PRODUCT_ORDER_CUSTOMER_ID ON  PRODUCT_ORDER([CUSTOMER_ID])
GO
CREATE INDEX PRODUCT_ORDER_ORDER_TYPE_ID ON  PRODUCT_ORDER([ORDER_TYPE_ID])
GO
CREATE INDEX PRODUCT_ORDER_DELIVERY_TYPE_ID ON  PRODUCT_ORDER([DELIVERY_TYPE_ID])
GO
CREATE INDEX PRODUCT_ORDER_ORDER_DATE ON  PRODUCT_ORDER([ORDER_DATE])
GO
CREATE INDEX PRODUCT_ORDER_DATE_EXPECTED ON  PRODUCT_ORDER([DATE_EXPECTED])
GO
CREATE INDEX PRODUCT_ORDER_USER_ADDRESS_ID ON  PRODUCT_ORDER([USER_ADDRESS_ID])
GO
print '' print '*** creating table PRODUCT_REVIEW'
GO
Create Table [dbo].[PRODUCT_REVIEW] (
[REVIEW_ID][INT]IDENTITY(10000, 1) NOT NULL,
[PRODUCT_ID][INT] NOT NULL,
[USER_ID][INT] NOT NULL,
[SUPPLIER_ID][INT] NOT NULL,
[RATING][INT] NOT NULL,
[NOTES][NVARCHAR](1000) NOT NULL,
CONSTRAINT [PK_PRODUCT_REVIEW] PRIMARY KEY ([REVIEW_ID] ASC)
)
GO

CREATE INDEX PRODUCT_REVIEW_PRODUCT_ID ON  PRODUCT_REVIEW([PRODUCT_ID])
GO
CREATE INDEX PRODUCT_REVIEW_USER_ID ON  PRODUCT_REVIEW([USER_ID])
GO
CREATE INDEX PRODUCT_REVIEW_SUPPLIER_ID ON  PRODUCT_REVIEW([SUPPLIER_ID])
GO
print '' print '*** creating table REPAIR'
GO
Create Table [dbo].[REPAIR] (
[REPAIR_ID][INT]IDENTITY(10000, 1) NOT NULL,
[VEHICLE_ID][INT] NOT NULL,
CONSTRAINT [PK_REPAIR] PRIMARY KEY ([REPAIR_ID] ASC)
)
GO

CREATE INDEX REPAIR_VEHICLE_ID ON  REPAIR([VEHICLE_ID])
GO
print '' print '*** creating table REPAIR_LINE'
GO
Create Table [dbo].[REPAIR_LINE] (
[REPAIR_LINE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[REPAIR_ID][INT] NOT NULL,
[REPAIR_DESCRIPTION][NVARCHAR](250) NOT NULL,
CONSTRAINT [PK_REPAIR_LINE] PRIMARY KEY ([REPAIR_LINE_ID] ASC)
)
GO

CREATE INDEX REPAIR_LINE_REPAIR_ID ON  REPAIR_LINE([REPAIR_ID])
GO
print '' print '*** creating table ROLE'
GO
Create Table [dbo].[ROLE] (
[ROLE_ID][NVARCHAR](250) NOT NULL,
[DESCRIPTION][NVARCHAR](1000) NOT NULL,
CONSTRAINT [PK_ROLE] PRIMARY KEY ([ROLE_ID] ASC)
)
GO

print '' print '*** creating table ROUTE'
GO
Create Table [dbo].[ROUTE] (
[ROUTE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[VEHICLE_ID][INT] NOT NULL,
[DRIVER_ID][INT] NOT NULL,
[ASSIGNED_DATE][DATETIME] NOT NULL,
CONSTRAINT [PK_ROUTE] PRIMARY KEY ([ROUTE_ID] ASC)
)
GO

CREATE INDEX ROUTE_VEHICLE_ID ON  ROUTE([VEHICLE_ID])
GO
CREATE INDEX ROUTE_DRIVER_ID ON  ROUTE([DRIVER_ID])
GO
print '' print '*** creating table SHIPPING_ADDRESS'
GO
Create Table [dbo].[SHIPPING_ADDRESS] (
[ADDRESS_ID][INT]IDENTITY(10000, 1) NOT NULL,
[USER_ID][INT] NOT NULL,
[ADDRESS1][NVARCHAR](100) NOT NULL,
[ADDRESS2][NVARCHAR](100),
[CITY][NVARCHAR](50) NOT NULL,
[STATE][NCHAR](2) NOT NULL,
[ZIP][NVARCHAR](10) NOT NULL,
[ADDRESS_NAME][NVARCHAR](50) NOT NULL,
CONSTRAINT [PK_SHIPPING_ADDRESS] PRIMARY KEY ([ADDRESS_ID] ASC)
)
GO

CREATE INDEX SHIPPING_ADDRESS_USER_ID ON  SHIPPING_ADDRESS([USER_ID])
GO
CREATE INDEX SHIPPING_ADDRESS_ADDRESS1 ON  SHIPPING_ADDRESS([ADDRESS1])
GO
print '' print '*** creating table STATUS'
GO
Create Table [dbo].[STATUS] (
[STATUS_ID][NVARCHAR](50) NOT NULL,
CONSTRAINT [PK_STATUS] PRIMARY KEY ([STATUS_ID] ASC)
)
GO

print '' print '*** creating table SUPPLIER'
GO
Create Table [dbo].[SUPPLIER] (
[SUPPLIER_ID][INT]IDENTITY(10000, 1) NOT NULL,
[USER_ID][INT] NOT NULL,
[IS_APPROVED][BIT] NOT NULL,
[APPROVED_BY][INT] NULL,
[FARM_NAME][NVARCHAR](300) NOT NULL,
[FARM_CITY][NVARCHAR](50) NOT NULL,
[FARM_STATE][NCHAR](2)	NOT NULL,
[FARM_TAX_ID][NVARCHAR](64) NOT NULL,
[ACTIVE][BIT]	NOT NULL DEFAULT 1
CONSTRAINT [PK_SUPPLIER] PRIMARY KEY ([SUPPLIER_ID] ASC),
CONSTRAINT [ak_SUPPLIER_USER_ID] UNIQUE([USER_ID] ASC)
)
GO

CREATE INDEX SUPPLIER_USER_ID ON  SUPPLIER([USER_ID])
GO
CREATE INDEX SUPPLIER_IS_APPROVED ON  SUPPLIER([IS_APPROVED])
GO
ALTER TABLE dbo.SUPPLIER
ADD CONSTRAINT SUPPLIER_IS_APPROVED_def
DEFAULT 0 FOR IS_APPROVED
GO
print '' print '*** creating table USER_ADDRESS'
GO
Create Table [dbo].[USER_ADDRESS] (
[USER_ADDRESS_ID][INT] NOT NULL,
[USER_ID][INT] NOT NULL,
[ADDRESS_LINE_1][NVARCHAR](50) NOT NULL,
[ADDRESS_LINE_2][NVARCHAR](50) NOT NULL,
[CITY][NVARCHAR](50) NOT NULL,
[STATE][NCHAR](2) NOT NULL,
[ZIP][NVARCHAR](10) NOT NULL,
CONSTRAINT [PK_USER_ADDRESS] PRIMARY KEY ([USER_ADDRESS_ID] ASC)
)
GO

CREATE INDEX USER_ADDRESS_USER_ID ON  USER_ADDRESS([USER_ID])
GO
print '' print '*** creating table USER_CART_LINE'
GO
Create Table [dbo].[USER_CART_LINE] (
[PRODUCT_ID][INT] NOT NULL,
[USER_ID][INT] NOT NULL,
CONSTRAINT [PK_USER_CART_LINE] PRIMARY KEY ([PRODUCT_ID] ASC, [USER_ID] ASC)
)
GO

print '' print '*** creating table VEHICLE'
GO
Create Table [dbo].[VEHICLE] (
[VEHICLE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[VIN][NVARCHAR](20) NOT NULL,
[MAKE][NVARCHAR](15) NOT NULL,
[MODEL][NVARCHAR](20) NOT NULL,
[MILEAGE][INT] NOT NULL,
[YEAR][NVARCHAR](4) NOT NULL,
[COLOR][NVARCHAR](20) NOT NULL,
[ACTIVE][BIT] NOT NULL,
[LATEST_REPAIR_DATE][DATE],
[LAST_DRIVER_ID][INT],
[VEHICLE_TYPE_ID][NVARCHAR](50) NOT NULL,
CONSTRAINT [AK_VIN] UNIQUE([VIN] ASC),
CONSTRAINT [PK_VEHICLE] PRIMARY KEY ([VEHICLE_ID] ASC)
)
GO

CREATE INDEX VEHICLE_LAST_DRIVER_ID ON  VEHICLE([LAST_DRIVER_ID])
GO
CREATE INDEX VEHICLE_VEHICLE_TYPE_ID ON  VEHICLE([VEHICLE_TYPE_ID])
GO
ALTER TABLE dbo.VEHICLE
ADD CONSTRAINT VEHICLE_ACTIVE_def
DEFAULT 0 FOR ACTIVE
GO
print '' print '*** creating table VEHICLE_TYPE'
GO
Create Table [dbo].[VEHICLE_TYPE] (
[VEHICLE_TYPE_ID][NVARCHAR](50) NOT NULL,
CONSTRAINT [PK_VEHICLE_TYPE] PRIMARY KEY ([VEHICLE_TYPE_ID] ASC)
)
GO

print '' print '*** creating table WAREHOUSE'
GO
Create Table [dbo].[WAREHOUSE] (
[WAREHOUSE_ID][INT]IDENTITY(10000, 1) NOT NULL,
[ADDRESS_1][NVARCHAR](50) NOT NULL,
[ADDRESS_2][NVARCHAR](50) NOT NULL,
[CITY][NVARCHAR](50) NOT NULL,
[STATE][NCHAR](2) NOT NULL,
[ZIP][NVARCHAR](10) NOT NULL,
CONSTRAINT [PK_WAREHOUSE] PRIMARY KEY ([WAREHOUSE_ID] ASC)
)
GO

CREATE INDEX WAREHOUSE_CITY ON  WAREHOUSE([CITY])
GO
CREATE INDEX WAREHOUSE_STATE ON  WAREHOUSE([STATE])
GO
CREATE INDEX WAREHOUSE_ZIP ON  WAREHOUSE([ZIP])
GO
print '' print '*** creating table WISHLIST_LINE'
GO
Create Table [dbo].[WISHLIST_LINE] (
[CUSTOMER_ID][INT] NOT NULL,
[PRODUCT_ID][INT] NOT NULL,
CONSTRAINT [PK_WISHLIST_LINE] PRIMARY KEY ([CUSTOMER_ID] ASC, [PRODUCT_ID] ASC)
)
GO

print '' print '*** Creating Foreign Key AGREEMENT_PRODUCT_ID'
GO
ALTER TABLE [dbo].[AGREEMENT] with nocheck
  ADD CONSTRAINT[fk_AGREEMENT_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key AGREEMENT_SUPPLIER_ID'
GO
ALTER TABLE [dbo].[AGREEMENT] with nocheck
  ADD CONSTRAINT[fk_AGREEMENT_SUPPLIER_ID] FOREIGN KEY ([SUPPLIER_ID])
  References [dbo].[SUPPLIER](SUPPLIER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

/*print '' print '*** Creating Foreign Key APP_USER_PREFERRED_ADDRESS_ID'
GO
ALTER TABLE [dbo].[APP_USER] with nocheck
  ADD CONSTRAINT[fk_APP_USER_PREFERRED_ADDRESS_ID] FOREIGN KEY ([PREFERRED_ADDRESS_ID])
  References [dbo].[USER_ADDRESS](USER_ADDRESS_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO*/

print '' print '*** Creating Foreign Key BACKORDER_PREORDER_ORDER_ID'
GO
ALTER TABLE [dbo].[BACKORDER_PREORDER] with nocheck
  ADD CONSTRAINT[fk_BACKORDER_PREORDER_ORDER_ID] FOREIGN KEY ([ORDER_ID])
  References [dbo].[PRODUCT_ORDER](ORDER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key BACKORDER_PREORDER_CUSTOMER_ID'
GO
ALTER TABLE [dbo].[BACKORDER_PREORDER] with nocheck
  ADD CONSTRAINT[fk_BACKORDER_PREORDER_CUSTOMER_ID] FOREIGN KEY ([CUSTOMER_ID])
  References [dbo].[CUSTOMER](CUSTOMER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key CHARITY_USER_ID'
GO
ALTER TABLE [dbo].[CHARITY] with nocheck
  ADD CONSTRAINT[fk_CHARITY_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key CHARITY_EMPLOYEE_ID'
GO
ALTER TABLE [dbo].[CHARITY] with nocheck
  ADD CONSTRAINT[fk_CHARITY_EMPLOYEE_ID] FOREIGN KEY ([EMPLOYEE_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key CHARITY_PRODUCTS_CHARITY_ID'
GO
ALTER TABLE [dbo].[CHARITY_PRODUCTS] with nocheck
  ADD CONSTRAINT[fk_CHARITY_PRODUCTS_CHARITY_ID] FOREIGN KEY ([CHARITY_ID])
  References [dbo].[CHARITY](CHARITY_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key CHARITY_PRODUCTS_PRODUCT_LOT_ID'
GO
ALTER TABLE [dbo].[CHARITY_PRODUCTS] with nocheck
  ADD CONSTRAINT[fk_CHARITY_PRODUCTS_PRODUCT_LOT_ID] FOREIGN KEY ([PRODUCT_LOT_ID])
  References [dbo].[PRODUCT_LOT](PRODUCT_LOT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key COMMERCIAL_USER_ID'
GO
ALTER TABLE [dbo].[COMMERCIAL] with nocheck
  ADD CONSTRAINT[fk_COMMERCIAL_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key CUSTOMER_CUSTOMER_ID'
GO
ALTER TABLE [dbo].[CUSTOMER] with nocheck
  ADD CONSTRAINT[fk_CUSTOMER_CUSTOMER_ID] FOREIGN KEY ([CUSTOMER_ID])
  References [dbo].[APP_USER](USER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DEAL_CATEGORY_DEAL_ID'
GO
ALTER TABLE [dbo].[DEAL_CATEGORY] with nocheck
  ADD CONSTRAINT[fk_DEAL_CATEGORY_DEAL_ID] FOREIGN KEY ([DEAL_ID])
  References [dbo].[DEAL](DEAL_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DEAL_CATEGORY_CATEGORY_ID'
GO
ALTER TABLE [dbo].[DEAL_CATEGORY] with nocheck
  ADD CONSTRAINT[fk_DEAL_CATEGORY_CATEGORY_ID] FOREIGN KEY ([CATEGORY_ID])
  References [dbo].[CATEGORY](CATEGORY_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DEAL_PRODUCT_DEAL_ID'
GO
ALTER TABLE [dbo].[DEAL_PRODUCT] with nocheck
  ADD CONSTRAINT[fk_DEAL_PRODUCT_DEAL_ID] FOREIGN KEY ([DEAL_ID])
  References [dbo].[DEAL](DEAL_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DEAL_PRODUCT_PRODUCT_ID'
GO
ALTER TABLE [dbo].[DEAL_PRODUCT] with nocheck
  ADD CONSTRAINT[fk_DEAL_PRODUCT_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DELIVERY_ROUTE_ID'
GO
ALTER TABLE [dbo].[DELIVERY] with nocheck
  ADD CONSTRAINT[fk_DELIVERY_ROUTE_ID] FOREIGN KEY ([ROUTE_ID])
  References [dbo].[ROUTE](ROUTE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DELIVERY_STATUS_ID'
GO
ALTER TABLE [dbo].[DELIVERY] with nocheck
  ADD CONSTRAINT[fk_DELIVERY_STATUS_ID] FOREIGN KEY ([STATUS_ID])
  References [dbo].[STATUS](STATUS_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DELIVERY_DELIVERY_TYPE_ID'
GO
ALTER TABLE [dbo].[DELIVERY] with nocheck
  ADD CONSTRAINT[fk_DELIVERY_DELIVERY_TYPE_ID] FOREIGN KEY ([DELIVERY_TYPE_ID])
  References [dbo].[DELIVERY_TYPE](DELIVERY_TYPE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DELIVERY_ORDER_ID'
GO
ALTER TABLE [dbo].[DELIVERY] with nocheck
  ADD CONSTRAINT[fk_DELIVERY_ORDER_ID] FOREIGN KEY ([ORDER_ID])
  References [dbo].[PRODUCT_ORDER](ORDER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DISPATCHER_MESSAGE_EMPLOYEE_ID'
GO
ALTER TABLE [dbo].[DISPATCHER_MESSAGE] with nocheck
  ADD CONSTRAINT[fk_DISPATCHER_MESSAGE_EMPLOYEE_ID] FOREIGN KEY ([EMPLOYEE_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DISPATCHER_MESSAGE_DRIVER_ID'
GO
ALTER TABLE [dbo].[DISPATCHER_MESSAGE] with nocheck
  ADD CONSTRAINT[fk_DISPATCHER_MESSAGE_DRIVER_ID] FOREIGN KEY ([DRIVER_ID])
  References [dbo].[DRIVER](DRIVER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key DRIVER_DRIVER_ID'
GO
ALTER TABLE [dbo].[DRIVER] with nocheck
  ADD CONSTRAINT[fk_DRIVER_DRIVER_ID] FOREIGN KEY ([DRIVER_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
GO

print '' print '*** Creating Foreign Key EMPLOYEE_USER_ID'
GO
ALTER TABLE [dbo].[EMPLOYEE] with nocheck
  ADD CONSTRAINT[fk_EMPLOYEE_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
GO

print '' print '*** Creating Foreign Key EMPLOYEE_MESSAGE_SENDER_ID'
GO
ALTER TABLE [dbo].[EMPLOYEE_MESSAGE] with nocheck
  ADD CONSTRAINT[fk_EMPLOYEE_MESSAGE_SENDER_ID] FOREIGN KEY ([SENDER_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key EMPLOYEE_MESSAGE_RECEIVER_ID'
GO
ALTER TABLE [dbo].[EMPLOYEE_MESSAGE] with nocheck
  ADD CONSTRAINT[fk_EMPLOYEE_MESSAGE_RECEIVER_ID] FOREIGN KEY ([RECEIVER_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
GO

print '' print '*** Creating Foreign Key EMPLOYEE_ORDER_RESPONSIBILITY_ORDER_ID'
GO
ALTER TABLE [dbo].[EMPLOYEE_ORDER_RESPONSIBILITY] with nocheck
  ADD CONSTRAINT[fk_EMPLOYEE_ORDER_RESPONSIBILITY_ORDER_ID] FOREIGN KEY ([ORDER_ID])
  References [dbo].[PRODUCT_ORDER](ORDER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key EMPLOYEE_ORDER_RESPONSIBILITY_EMPLOYEE_ID'
GO
ALTER TABLE [dbo].[EMPLOYEE_ORDER_RESPONSIBILITY] with nocheck
  ADD CONSTRAINT[fk_EMPLOYEE_ORDER_RESPONSIBILITY_EMPLOYEE_ID] FOREIGN KEY ([EMPLOYEE_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key EMPLOYEE_ROLE_EMPLOYEE_ID'
GO
ALTER TABLE [dbo].[EMPLOYEE_ROLE] with nocheck
  ADD CONSTRAINT[fk_EMPLOYEE_ROLE_EMPLOYEE_ID] FOREIGN KEY ([EMPLOYEE_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key EMPLOYEE_ROLE_ROLE_ID'
GO
ALTER TABLE [dbo].[EMPLOYEE_ROLE] with nocheck
  ADD CONSTRAINT[fk_EMPLOYEE_ROLE_ROLE_ID] FOREIGN KEY ([ROLE_ID])
  References [dbo].[ROLE](ROLE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key INSPECTION_EMPLOYEE_ID'
GO
ALTER TABLE [dbo].[INSPECTION] with nocheck
  ADD CONSTRAINT[fk_INSPECTION_EMPLOYEE_ID] FOREIGN KEY ([EMPLOYEE_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key INSPECTION_PRODUCT_LOT_ID'
GO
ALTER TABLE [dbo].[INSPECTION] with nocheck
  ADD CONSTRAINT[fk_INSPECTION_PRODUCT_LOT_ID] FOREIGN KEY ([PRODUCT_LOT_ID])
  References [dbo].[PRODUCT_LOT](PRODUCT_LOT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key INSPECTION_GRADE_ID'
GO
ALTER TABLE [dbo].[INSPECTION] with nocheck
  ADD CONSTRAINT[fk_INSPECTION_GRADE_ID] FOREIGN KEY ([GRADE_ID])
  References [dbo].[GRADE](GRADE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key MAINTENANCE_SCHEDULE_VEHICLE_ID'
GO
ALTER TABLE [dbo].[MAINTENANCE_SCHEDULE] with nocheck
  ADD CONSTRAINT[fk_MAINTENANCE_SCHEDULE_VEHICLE_ID] FOREIGN KEY ([VEHICLE_ID])
  References [dbo].[VEHICLE](VEHICLE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key MAINTENANCE_SCHEDULE_LINE_MAINTENANCE_SCHEDULE_ID'
GO
ALTER TABLE [dbo].[MAINTENANCE_SCHEDULE_LINE] with nocheck
  ADD CONSTRAINT[fk_MAINTENANCE_SCHEDULE_LINE_MAINTENANCE_SCHEDULE_ID] FOREIGN KEY ([MAINTENANCE_SCHEDULE_ID])
  References [dbo].[MAINTENANCE_SCHEDULE](MAINTENANCE_SCHEDULE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key MESSAGE_LINE_DISPATCHER_MESSAGE_ID'
GO
ALTER TABLE [dbo].[MESSAGE_LINE] with nocheck
  ADD CONSTRAINT[fk_MESSAGE_LINE_DISPATCHER_MESSAGE_ID] FOREIGN KEY ([DISPATCHER_MESSAGE_ID])
  References [dbo].[DISPATCHER_MESSAGE](DISPATCHER_MESSAGE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key ORDER_STATUS_ORDER_STATUS_ID'
GO
ALTER TABLE [dbo].[ORDER_STATUS] with nocheck
  ADD CONSTRAINT[fk_ORDER_STATUS_ORDER_STATUS_ID] FOREIGN KEY ([ORDER_STATUS_ID])
  References [dbo].[STATUS](STATUS_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PACKAGE_DELIVERY_ID'
GO
ALTER TABLE [dbo].[PACKAGE] with nocheck
  ADD CONSTRAINT[fk_PACKAGE_DELIVERY_ID] FOREIGN KEY ([DELIVERY_ID])
  References [dbo].[DELIVERY](DELIVERY_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PACKAGE_ORDER_ID'
GO
ALTER TABLE [dbo].[PACKAGE] with nocheck
  ADD CONSTRAINT[fk_PACKAGE_ORDER_ID] FOREIGN KEY ([ORDER_ID])
  References [dbo].[PRODUCT_ORDER](ORDER_ID)
GO

print '' print '*** Creating Foreign Key PACKAGE_LINE_PACKAGE_ID'
GO
ALTER TABLE [dbo].[PACKAGE_LINE] with nocheck
  ADD CONSTRAINT[fk_PACKAGE_LINE_PACKAGE_ID] FOREIGN KEY ([PACKAGE_ID])
  References [dbo].[PACKAGE](PACKAGE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PACKAGE_LINE_PRODUCT_LOT_ID'
GO
ALTER TABLE [dbo].[PACKAGE_LINE] with nocheck
  ADD CONSTRAINT[fk_PACKAGE_LINE_PRODUCT_LOT_ID] FOREIGN KEY ([PRODUCT_LOT_ID])
  References [dbo].[PRODUCT_LOT](PRODUCT_LOT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PICKUP_SUPPLIER_ID'
GO
ALTER TABLE [dbo].[PICKUP] with nocheck
  ADD CONSTRAINT[fk_PICKUP_SUPPLIER_ID] FOREIGN KEY ([SUPPLIER_ID])
  References [dbo].[SUPPLIER](SUPPLIER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PICKUP_WAREHOUSE_ID'
GO
ALTER TABLE [dbo].[PICKUP] with nocheck
  ADD CONSTRAINT[fk_PICKUP_WAREHOUSE_ID] FOREIGN KEY ([WAREHOUSE_ID])
  References [dbo].[WAREHOUSE](WAREHOUSE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PICKUP_DRIVER_ID'
GO
ALTER TABLE [dbo].[PICKUP] with nocheck
  ADD CONSTRAINT[fk_PICKUP_DRIVER_ID] FOREIGN KEY ([DRIVER_ID])
  References [dbo].[DRIVER](DRIVER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PICKUP_EMPLOYEE_ID'
GO
ALTER TABLE [dbo].[PICKUP] with nocheck
  ADD CONSTRAINT[fk_PICKUP_EMPLOYEE_ID] FOREIGN KEY ([EMPLOYEE_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PICKUP_LINE_PICKUP_ID'
GO
ALTER TABLE [dbo].[PICKUP_LINE] with nocheck
  ADD CONSTRAINT[fk_PICKUP_LINE_PICKUP_ID] FOREIGN KEY ([PICKUP_ID])
  References [dbo].[PICKUP](PICKUP_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PICKUP_LINE_PRODUCT_LOT_ID'
GO
ALTER TABLE [dbo].[PICKUP_LINE] with nocheck
  ADD CONSTRAINT[fk_PICKUP_LINE_PRODUCT_LOT_ID] FOREIGN KEY ([PRODUCT_LOT_ID])
  References [dbo].[PRODUCT_LOT](PRODUCT_LOT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_CATEGORY_PRODUCT_ID'
GO
ALTER TABLE [dbo].[PRODUCT_CATEGORY] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_CATEGORY_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_CATEGORY_CATEGORY_ID'
GO
ALTER TABLE [dbo].[PRODUCT_CATEGORY] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_CATEGORY_CATEGORY_ID] FOREIGN KEY ([CATEGORY_ID])
  References [dbo].[CATEGORY](CATEGORY_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_GRADE_PRICE_PRODUCT_ID'
GO
ALTER TABLE [dbo].[PRODUCT_GRADE_PRICE] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_GRADE_PRICE_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_GRADE_PRICE_GRADE_ID'
GO
ALTER TABLE [dbo].[PRODUCT_GRADE_PRICE] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_GRADE_PRICE_GRADE_ID] FOREIGN KEY ([GRADE_ID])
  References [dbo].[GRADE](GRADE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_LOT_WAREHOUSE_ID'
GO
ALTER TABLE [dbo].[PRODUCT_LOT] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_LOT_WAREHOUSE_ID] FOREIGN KEY ([WAREHOUSE_ID])
  References [dbo].[WAREHOUSE](WAREHOUSE_ID)
GO

print '' print '*** Creating Foreign Key PRODUCT_LOT_SUPPLIER_ID'
GO
ALTER TABLE [dbo].[PRODUCT_LOT] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_LOT_SUPPLIER_ID] FOREIGN KEY ([SUPPLIER_ID])
  References [dbo].[SUPPLIER](SUPPLIER_ID)
GO

print '' print '*** Creating Foreign Key PRODUCT_LOT_LOCATION_ID'
GO
ALTER TABLE [dbo].[PRODUCT_LOT] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_LOT_LOCATION_ID] FOREIGN KEY ([LOCATION_ID])
  References [dbo].[LOCATION](LOCATION_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_LOT_PRODUCT_ID'
GO
ALTER TABLE [dbo].[PRODUCT_LOT] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_LOT_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_LOT_SUPPLY_MANAGER_ID'
GO
ALTER TABLE [dbo].[PRODUCT_LOT] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_LOT_SUPPLY_MANAGER_ID] FOREIGN KEY ([SUPPLY_MANAGER_ID])
  References [dbo].[EMPLOYEE](EMPLOYEE_ID)
GO

print '' print '*** Creating Foreign Key PRODUCT_ORDER_CUSTOMER_ID'
GO
ALTER TABLE [dbo].[PRODUCT_ORDER] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_ORDER_CUSTOMER_ID] FOREIGN KEY ([CUSTOMER_ID])
  References [dbo].[CUSTOMER](CUSTOMER_ID)
GO

print '' print '*** Creating Foreign Key PRODUCT_ORDER_ORDER_TYPE_ID'
GO
ALTER TABLE [dbo].[PRODUCT_ORDER] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_ORDER_ORDER_TYPE_ID] FOREIGN KEY ([ORDER_TYPE_ID])
  References [dbo].[ORDER_TYPE](ORDER_TYPE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_ORDER_DELIVERY_TYPE_ID'
GO
ALTER TABLE [dbo].[PRODUCT_ORDER] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_ORDER_DELIVERY_TYPE_ID] FOREIGN KEY ([DELIVERY_TYPE_ID])
  References [dbo].[DELIVERY_TYPE](DELIVERY_TYPE_ID)
GO

print '' print '*** Creating Foreign Key PRODUCT_ORDER_ORDER_STATUS_ID'
GO
ALTER TABLE [dbo].[PRODUCT_ORDER] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_ORDER_ORDER_STATUS_ID] FOREIGN KEY ([ORDER_STATUS_ID])
  References [dbo].[ORDER_STATUS](ORDER_STATUS_ID)
GO

print '' print '*** Creating Foreign Key PRODUCT_ORDER_USER_ADDRESS_ID'
GO
ALTER TABLE [dbo].[PRODUCT_ORDER] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_ORDER_USER_ADDRESS_ID] FOREIGN KEY ([USER_ADDRESS_ID])
  References [dbo].[USER_ADDRESS](USER_ADDRESS_ID)
GO

print '' print '*** Creating Foreign Key PRODUCT_REVIEW_PRODUCT_ID'
GO
ALTER TABLE [dbo].[PRODUCT_REVIEW] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_REVIEW_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_REVIEW_USER_ID'
GO
ALTER TABLE [dbo].[PRODUCT_REVIEW] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_REVIEW_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key PRODUCT_REVIEW_SUPPLIER_ID'
GO
ALTER TABLE [dbo].[PRODUCT_REVIEW] with nocheck
  ADD CONSTRAINT[fk_PRODUCT_REVIEW_SUPPLIER_ID] FOREIGN KEY ([SUPPLIER_ID])
  References [dbo].[SUPPLIER](SUPPLIER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key REPAIR_VEHICLE_ID'
GO
ALTER TABLE [dbo].[REPAIR] with nocheck
  ADD CONSTRAINT[fk_REPAIR_VEHICLE_ID] FOREIGN KEY ([VEHICLE_ID])
  References [dbo].[VEHICLE](VEHICLE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key REPAIR_LINE_REPAIR_ID'
GO
ALTER TABLE [dbo].[REPAIR_LINE] with nocheck
  ADD CONSTRAINT[fk_REPAIR_LINE_REPAIR_ID] FOREIGN KEY ([REPAIR_ID])
  References [dbo].[REPAIR](REPAIR_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key ROUTE_VEHICLE_ID'
GO
ALTER TABLE [dbo].[ROUTE] with nocheck
  ADD CONSTRAINT[fk_ROUTE_VEHICLE_ID] FOREIGN KEY ([VEHICLE_ID])
  References [dbo].[VEHICLE](VEHICLE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key ROUTE_DRIVER_ID'
GO
ALTER TABLE [dbo].[ROUTE] with nocheck
  ADD CONSTRAINT[fk_ROUTE_DRIVER_ID] FOREIGN KEY ([DRIVER_ID])
  References [dbo].[DRIVER](DRIVER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key SHIPPING_ADDRESS_USER_ID'
GO
ALTER TABLE [dbo].[SHIPPING_ADDRESS] with nocheck
  ADD CONSTRAINT[fk_SHIPPING_ADDRESS_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key SUPPLIER_USER_ID'
GO
ALTER TABLE [dbo].[SUPPLIER] with nocheck
  ADD CONSTRAINT[fk_SUPPLIER_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
GO

print '' print '*** Creating Foreign Key USER_ADDRESS_USER_ID'
GO
ALTER TABLE [dbo].[USER_ADDRESS] with nocheck
  ADD CONSTRAINT[fk_USER_ADDRESS_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
GO

print '' print '*** Creating Foreign Key USER_CART_LINE_PRODUCT_ID'
GO
ALTER TABLE [dbo].[USER_CART_LINE] with nocheck
  ADD CONSTRAINT[fk_USER_CART_LINE_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key USER_CART_LINE_USER_ID'
GO
ALTER TABLE [dbo].[USER_CART_LINE] with nocheck
  ADD CONSTRAINT[fk_USER_CART_LINE_USER_ID] FOREIGN KEY ([USER_ID])
  References [dbo].[APP_USER](USER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key VEHICLE_LAST_DRIVER_ID'
GO
ALTER TABLE [dbo].[VEHICLE] with nocheck
  ADD CONSTRAINT[fk_VEHICLE_LAST_DRIVER_ID] FOREIGN KEY ([LAST_DRIVER_ID])
  References [dbo].[DRIVER](DRIVER_ID)
GO

print '' print '*** Creating Foreign Key VEHICLE_VEHICLE_TYPE_ID'
GO
ALTER TABLE [dbo].[VEHICLE] with nocheck
  ADD CONSTRAINT[fk_VEHICLE_VEHICLE_TYPE_ID] FOREIGN KEY ([VEHICLE_TYPE_ID])
  References [dbo].[VEHICLE_TYPE](VEHICLE_TYPE_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key WISHLIST_LINE_CUSTOMER_ID'
GO
ALTER TABLE [dbo].[WISHLIST_LINE] with nocheck
  ADD CONSTRAINT[fk_WISHLIST_LINE_CUSTOMER_ID] FOREIGN KEY ([CUSTOMER_ID])
  References [dbo].[CUSTOMER](CUSTOMER_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO

print '' print '*** Creating Foreign Key WISHLIST_LINE_PRODUCT_ID'
GO
ALTER TABLE [dbo].[WISHLIST_LINE] with nocheck
  ADD CONSTRAINT[fk_WISHLIST_LINE_PRODUCT_ID] FOREIGN KEY ([PRODUCT_ID])
  References [dbo].[PRODUCT](PRODUCT_ID)
  ON UPDATE CASCADE
  ON DELETE CASCADE
GO
Print '' print  ' *** creating procedure sp_retrieve_app_user_from_search'
GO
Create PROCEDURE sp_retrieve_user_by_username
(
@USER_NAME[NVARCHAR](64)
)
AS
BEGIN
SELECT USER_ID, FIRST_NAME, LAST_NAME, PHONE, PREFERRED_ADDRESS_ID, E_MAIL_ADDRESS, E_MAIL_PREFERENCES, USER_NAME, ACTIVE
FROM app_user
WHERE USER_NAME = @USER_NAME 
END

GO

GO
Print '' print  ' *** creating procedure sp_retrieve_app_username_by_email'
GO
Create PROCEDURE sp_retrieve_app_username_by_email
(
@E_MAIL_ADDRESS[NVARCHAR](50)
)
AS
BEGIN
SELECT USER_NAME
FROM app_user
WHERE E_MAIL_ADDRESS = @E_MAIL_ADDRESS 
END

GO


INSERT INTO APP_USER (FIRST_NAME, LAST_NAME, PHONE, PREFERRED_ADDRESS_ID, E_MAIL_ADDRESS, E_MAIL_PREFERENCES, PASSWORD_HASH, PASSWORD_SALT, USER_NAME, ACTIVE)
VALUES
('', '', '', NULL, '', 0, 'f8ed27280564f0e7f945c463e483b800b1f2c6d44f6e9d400a44b2c9bacf0af9', 'ADMIN', 'ADMIN', 1)
GO

INSERT INTO VEHICLE_TYPE(VEHICLE_TYPE_ID)
VALUES
('Truck'),
('Van'),
('Semi-Truck')
GO

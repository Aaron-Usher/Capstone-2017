using DataObjects;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DataAccessLayer
{
    public class OrderLineAccessor
    {

        /// <summary>
        /// Eric Walton
        /// 2017/10/3
        /// Invokes a stored procedure to create a new order line
        /// </summary>
        /// <param name="order"></param>
        /// <returns>The new order line number that is auto generated by the database.</returns>
        public static int CreateOrderLine(OrderLine oLine)
        {
            int result = 0;

            var conn = DBConnection.GetConnection();
            var cmdText = @"sp_create_order_line";
            var cmd = new SqlCommand(cmdText, conn);
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@PRODUCT_ORDER_ID", oLine.ProductOrderID);
            cmd.Parameters.AddWithValue("@PRODUCT_ID", oLine.ProductID);
            cmd.Parameters.AddWithValue("@PRODUCT_NAME", oLine.ProductName);
            cmd.Parameters.AddWithValue("@QUANTITY", oLine.Quantity);
            cmd.Parameters.AddWithValue("@GRADE_ID", oLine.GradeID);
            cmd.Parameters.AddWithValue("@PRICE", oLine.Price);
            cmd.Parameters.AddWithValue("@UNIT_DISCOUNT", oLine.UnitDiscount);

            try
            {
                conn.Open();
                int.TryParse(cmd.ExecuteScalar().ToString(), out result);
            }
            catch (SqlException ex)
            {
                throw new Exception("Error: " + ex);
            }
            finally
            {
                conn.Close();
            }
            return result;
        }

        public static List<OrderLine> RetrieveOrderLinesByOrderId(int OrderId)
        {
            List<OrderLine> orderLines = new List<OrderLine>();

            var conn = DBConnection.GetConnection();
            var cmdText = @"sp_retrieve_product_orderline_list_by_order_id";
            var cmd = new SqlCommand(cmdText, conn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue(@"PRODUCT_ORDER_ID", OrderId);
            try
            {
                conn.Open();
                var reader = cmd.ExecuteReader();
                if (reader.HasRows)
                {
                    while (reader.Read())
                    {
                        OrderLine orderLine = new OrderLine();
                        orderLine.OrderLineID = reader.GetInt32(0);
                        orderLine.ProductOrderID = reader.GetInt32(1);
                        if (!reader.IsDBNull(2))
                        {
                            orderLine.ProductID = reader.GetInt32(2);
                        }
                        orderLine.ProductName = reader.GetString(3);
                        orderLine.Quantity = reader.GetInt32(4);
                        orderLine.GradeID = reader.GetString(5);
                        orderLine.Price = reader.GetDecimal(6);
                        orderLine.UnitDiscount = reader.GetDecimal(7);
                        orderLines.Add(orderLine);
                    }
                    reader.Close();
                }
            }
            catch (Exception)
            {
                throw;
            }
            finally
            {
                conn.Close();
            }
            return orderLines;
        }

    } // end of class
} // end of namespace

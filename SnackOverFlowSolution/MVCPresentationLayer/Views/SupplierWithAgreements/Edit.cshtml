@model DataObjects.SupplierWithAgreements

@{
    ViewBag.Title = "Edit Supplier Account";
    Layout = "~/Views/Shared/_AccountsLayout.cshtml";
}

@*Start Main Header*@
<header class="main-header custom-bg41 parallax" data-stellar-background-ratio="0.5" id="top">
    <div class="logo-container align-center style2">
        <a href="#" class="logo">
            <img src="~/Images/slider-images/lolgobg2.png" alt="Snack Overflow Logo" />
        </a>
        <h1 style="color: white;">Edit Supplier Account</h1>
    </div>
</header>
@*End of Main Header*@

@using (Html.BeginForm("Create", "SupplierWithAgreements", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <section class="store-checkout" style="margin-bottom: -100px">
        <div class="container wow fadeInDown billing-address">
            <div class="row">
                <div class="col-md-12" style="margin-bottom: 20px;">
                    <h3>Supplier Account</h3>
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    @Html.HiddenFor(model => model.ID)
                    <hr/>
                </div>
                
                <div class="input-container col-md-6">
                    @Html.TextBoxFor(m => m.FarmTaxID, new { @class = "form-control small-input white-bg", @placeholder = "Federal Tax ID" })
                    @Html.ValidationMessageFor(m => m.FarmTaxID, "", new { @class = "text-danger" })
                </div>

                <div class="input-container col-md-6">
                    @Html.EditorFor(model => model.FarmName, new { htmlAttributes = new { @class = "form-control small-input white-bg", @placeholder = "Farm Name" } })
                    @Html.ValidationMessageFor(model => model.FarmName, "", new { @class = "text-danger" })
                </div>

                <div class="input-container col-md-6">
                    @Html.EditorFor(model => model.FarmAddress, new { htmlAttributes = new { @class = "form-control small-input white-bg", @placeholder = "Farm Address" } })
                    @Html.ValidationMessageFor(model => model.FarmAddress, "", new { @class = "text-danger" })
                </div>

                <div class="input-container col-md-6">
                    @Html.EditorFor(model => model.FarmCity, new { htmlAttributes = new { @class = "form-control small-input white-bg", @placeholder = "Farm City" } })
                    @Html.ValidationMessageFor(model => model.FarmCity, "", new { @class = "text-danger" })
                </div>

                <div class="input-container col-md-6">
                    @Html.EditorFor(model => model.FarmState, new { htmlAttributes = new { @class = "form-control small-input white-bg", @placeholder = "Farm State" } })
                    @Html.ValidationMessageFor(model => model.FarmState, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12" style="margin-bottom: 20px; margin-top: 20px">
                    @Html.LabelFor(model => model.Agreements, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <br /><br />

                <div class="form-group col-md-12">
                    <div class="list-group" data-toggle="items">
                        @Html.ListBoxFor(model => model.ProductIDs, new MultiSelectList(Model.Agreements, "ProductId", "ProductName", Model.ProductIDs), new { Multiple = "multiple", @class = "list-group", @id = "supplierAgg" })
                    </div>
                </div>

                <div class="col-md-12 align-right">
                    <input type="submit" value="Save" class="custom-button button-style3 filled medium"/>
                    <p>@ViewBag.Message</p>
                </div>
                
                <div class="col-md-12">
                    <hr />
                    <div class="col-md-6">
                        <h3>@Html.ActionLink("Back to Account", "Index", "Manage", null, null)</h3>
                    </div>
                    <div class="col-md-6 align-right">
                        <h3>@Html.ActionLink("Update Agreements", "UpdateAgreements", "SupplierWithAgreements", new { supplierId = Model.SupplierID }, null)</h3>
                    </div>                    
                </div>                
            </div>
        </div>
    </section>
}

@*Old Version*@
@{/*
    @using (Html.BeginForm())
{
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Supplier Account</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            @*<div class="form-group">
                    @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SupplierID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.IsApproved, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsApproved)
                            @Html.ValidationMessageFor(model => model.IsApproved, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApprovedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
                    </div>
                </div>*@



            @*<div class="form-group">
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.FarmName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FarmName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FarmName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FarmAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FarmAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FarmAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FarmCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FarmCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FarmCity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FarmState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FarmState, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FarmState, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FarmTaxID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FarmTaxID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FarmTaxID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Agreements, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="list-group" data-toggle="items">
                        @Html.ListBoxFor(model => model.ProductIDs, new MultiSelectList(Model.Agreements, "ProductId", "ProductName", Model.ProductIDs), new { Multiple = "multiple", @class = "list-group" })
                        @*@foreach (var agreement in Model.Agreements)
                            {
                                <a href="#" class="list-group-item">@agreement.ProductName</a>
                            }*@
                    </div>
                </div>
                @Html.ActionLink("Update Agreements", "UpdateAgreements", "SupplierWithAgreements", new {supplierId = Model.SupplierID}, null)
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Active)
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

    <div>
        @Html.ActionLink("Back to Account", "Index", "Manage", null, null)
    </div>

    @*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/listgroup.min.js"></script>
    }*@
    
*/}

   

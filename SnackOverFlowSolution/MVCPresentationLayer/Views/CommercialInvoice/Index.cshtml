@model IEnumerable<DataObjects.CommercialInvoice>

@{
    ViewBag.Title = "Index";
}

<h2>Invoices</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CommercialInvoiceId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CommercialId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InvoiceDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubTotal)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaxAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Total)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AmountPaid)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Approved)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink(item.CommercialInvoiceId.ToString(), "Details", new { id = item.CommercialInvoiceId })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CommercialId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InvoiceDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SubTotal)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TaxAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Total)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AmountPaid)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Approved)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Active)
        </td>
    </tr>
}

</table>
